---
name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux-packages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - uses: actions/setup-go@v2

      - name: Build linux packages
        run: |
          make package

      - uses: jiro4989/build-deb-action@v2
        with:
          package: 'https-user-management'
          package_root: 'https-user-management'
          maintainer: 'Sean Williams <sean@xeed.io>'
          version: ${{ github.ref }}
          arch: 'amd64'
          depends: 'libc6, libpam0g'
          desc: 'A set of PAM and NSS modules to manage remote users over HTTPS with mTLS.'

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-deb
          path: |
            ./*.deb

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux-packages
    steps:
      - uses: actions/checkout@v1
      - name: Generate changelog
        run: |
          wget https://github.com/git-chglog/git-chglog/releases/download/0.9.1/git-chglog_linux_amd64
          chmod +x git-chglog_linux_amd64
          mv git-chglog_linux_amd64 git-chglog
          ./git-chglog --output ./changelog $(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./changelog
          draft: false
          prerelease: false

      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt

      - uses: actions/upload-artifact@v2
        with:
          name: create-release
          path: upload_url.txt

  upload-linux-packages:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact-deb

      - uses: actions/download-artifact@v2
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *.deb | head -n 1)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: application/vnd.debian.binary-package
